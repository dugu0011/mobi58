# Generated by Django 3.0.8 on 2021-08-24 10:42

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=60, null=True, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(default=None, max_length=20, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='last_login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=30, null=True)),
                ('birth_day', models.DateField(blank=True, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=50, null=True)),
                ('pan_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('remark', models.TextField(blank=True, max_length=2000, null=True)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Submitted', 'Submitted')], default='Submitted', max_length=200)),
                ('leaves', jsonfield.fields.JSONField(blank=True, null=True)),
                ('pin', models.CharField(blank=True, max_length=4, null=True)),
                ('otp', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.TextField(blank=True, max_length=500, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('latitude', models.DecimalField(decimal_places=5, default=0.0, max_digits=20)),
                ('longitude', models.DecimalField(decimal_places=5, default=0.0, max_digits=20)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
                ('is_shipping_address', models.BooleanField(default=False)),
                ('is_billing_address', models.BooleanField(default=False)),
                ('address_type', models.CharField(blank=True, choices=[('shipping', 'Shipping'), ('billing', 'Billing')], max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='AdminDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('trigger_type', models.CharField(choices=[('customer', 'Customer'), ('quotation', 'Quotation'), ('order', 'Order'), ('lead', 'Lead')], default='customer', max_length=50)),
            ],
            options={
                'verbose_name': 'Admin Details',
                'verbose_name_plural': 'Admin Details',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shourt_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('company_type', models.CharField(choices=[('individual', 'Individual'), ('properitor', 'Properitor'), ('partner', 'Partner'), ('llp', 'LLP'), ('pvt_ltd', 'PVT LTD'), ('ltd', 'LTD')], max_length=50, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=50, null=True)),
                ('pan_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('gst_no', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('gst_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('msme', models.BooleanField(default=False)),
                ('msme_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('cin_no', models.CharField(blank=True, max_length=50, null=True)),
                ('cin_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('credit_limit', models.CharField(blank=True, max_length=50, null=True)),
                ('project_status', models.CharField(blank=True, choices=[('on_hold', 'On Hold'), ('on_going', 'On Going'), ('completed', 'Completed')], max_length=20, null=True)),
                ('remark', models.TextField(blank=True, max_length=2000, null=True)),
                ('source_company', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_category', models.CharField(choices=[('distributer', 'Distributer,1'), ('nhai', 'NHAI,1'), ('precast', 'Precast,1'), ('real_estate', 'Real Estate,1'), ('rmc', 'RMC,1'), ('supplier', 'Supplier,1'), ('stp', 'STP,1'), ('water_treatment_htp', 'Water Treatment & HTP,1'), ('infra_projects', 'Infra Projects,1'), ('retail', 'Retail,1'), ('metro', 'Metro,1'), ('pwd', 'PWD,1')], max_length=50, null=True)),
                ('inhouse_use', models.BooleanField(default=False)),
                ('is_master', models.BooleanField(default=True)),
                ('is_mine_transaction', models.BooleanField(default=True)),
                ('is_crusher_inbound', models.BooleanField(default=True)),
                ('is_crusher_outbound', models.BooleanField(default=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_added_by', to=settings.AUTH_USER_MODEL)),
                ('address', models.ManyToManyField(to='accounts.Address')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_company', to='accounts.Company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='CrusherDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crusher_name', models.CharField(blank=True, max_length=255, null=True)),
                ('crusher_id', models.CharField(blank=True, default='cmp_1001', max_length=255, null=True)),
                ('lease_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mineral_type', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('coordinate_a', models.CharField(default=0.0, max_length=255)),
                ('coordinate_b', models.CharField(default=0.0, max_length=255)),
                ('coordinate_c', models.CharField(default=0.0, max_length=255)),
                ('coordinate_d', models.CharField(default=0.0, max_length=255)),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_crushers_detail', to='accounts.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HsnCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('gst_no', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('gst_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MineDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mine_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mine_id', models.CharField(blank=True, default=accounts.models.mine_unique_id, max_length=255, null=True)),
                ('lease_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mineral_type', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('coordinate_a', models.CharField(default=0.0, max_length=255)),
                ('coordinate_b', models.CharField(default=0.0, max_length=255)),
                ('coordinate_c', models.CharField(default=0.0, max_length=255)),
                ('coordinate_d', models.CharField(default=0.0, max_length=255)),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_mines_detail', to='accounts.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(15, 'master'), (16, 'mine_transaction'), (17, 'crusher_inbound'), (18, 'crusher_outbound'), (4, 'superuser'), (3, 'admin'), (2, 'hr'), (1, 'client'), (5, 'company1'), (6, 'company2'), (7, 'company3'), (8, 'customer'), (9, 'product'), (10, 'vehicle'), (11, 'mine'), (12, 'crusher'), (13, 'owner'), (14, 'newuser')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RoleName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'UOM',
                'verbose_name_plural': 'UOM',
            },
        ),
        migrations.CreateModel(
            name='VehicleMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_no', models.CharField(blank=True, max_length=255, null=True)),
                ('vehicle_type', models.CharField(blank=True, choices=[('tractor', 'Tractor'), ('truck 10 tyres', 'Truck 10 Tyres'), ('truck 20 tyres', 'Truck 20 Tyres'), ('trailer', 'Trailer')], max_length=200, null=True)),
                ('insurance_validity', models.DateTimeField(blank=True, null=True)),
                ('insurance_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('pollution_validity', models.DateTimeField(blank=True, null=True)),
                ('pollution_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('chassis_no', models.CharField(blank=True, max_length=255, null=True)),
                ('engine_no', models.CharField(blank=True, max_length=255, null=True)),
                ('fuel_type', models.CharField(choices=[('deisel', 'Diesel'), ('petrol', 'Petrol')], default='deisel', max_length=200)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('rc_no', models.CharField(blank=True, max_length=255, null=True)),
                ('rc_file', models.FileField(blank=True, null=True, upload_to='file/', validators=[accounts.models.validate_file_size])),
                ('location', models.TextField(blank=True, null=True)),
                ('assigned_to', models.CharField(blank=True, max_length=255, null=True)),
                ('self_owner', models.BooleanField(default=False)),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companys_master', to='accounts.Company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_vehicles_master', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('crusher', 'Crusher'), ('mines', 'Mines')], default='crusher', max_length=200)),
                ('item_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_rate', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('bill_rate', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_products', to='accounts.Company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_products_master', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('percentage', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_companys', to='accounts.Company')),
                ('crusher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_crusher', to='accounts.CrusherDetail')),
                ('mine_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_mines', to='accounts.MineDetail')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_owners', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='minedetail',
            name='owner',
            field=models.ManyToManyField(to='accounts.Owner'),
        ),
        migrations.AddField(
            model_name='minedetail',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_mines_detail', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('district_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='district_state', to='accounts.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='crusherdetail',
            name='owner',
            field=models.ManyToManyField(to='accounts.Owner'),
        ),
        migrations.AddField(
            model_name='crusherdetail',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_crushers_detail', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ContactDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('designation', models.CharField(max_length=150)),
                ('mobile', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(max_length=150)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='accounts.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('city_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='city_district', to='accounts.District')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_city', to='accounts.City'),
        ),
        migrations.AddField(
            model_name='address',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_district', to='accounts.District'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_state', to='accounts.State'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='address',
            field=models.ManyToManyField(to='accounts.Address'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='assign_company',
            field=models.ManyToManyField(blank=True, null=True, to='accounts.Company'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='company',
            field=models.ManyToManyField(blank=True, null=True, related_name='company_user', to='accounts.Company'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='crusher',
            field=models.ManyToManyField(related_name='multiple_crushers', to='accounts.CrusherDetail'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='mines',
            field=models.ManyToManyField(related_name='multiple_mines', to='accounts.MineDetail'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='report_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_to_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_role',
            field=models.ManyToManyField(related_name='multiple_role', to='accounts.Role'),
        ),
    ]
